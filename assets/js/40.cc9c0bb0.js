(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{592:function(e,v,_){"use strict";_.r(v);var o=_(17),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"new-vue时其内部发生了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#new-vue时其内部发生了什么"}},[e._v("#")]),e._v(" new Vue时其内部发生了什么？")]),e._v(" "),_("p",[e._v("当我们实例化"),_("code",[e._v("Vue")]),e._v("时，实际上派发了两个生命周期钩子"),_("code",[e._v("beforeCreated()")]),e._v(","),_("code",[e._v("created()")])]),e._v(" "),_("p",[e._v("，而在派发这两个生命周期钩子之前，要对"),_("code",[e._v("Vue")]),e._v("的实例进行一个初始化"),_("code",[e._v("initMixin(Vue)")]),e._v(",")]),e._v(" "),_("p",[e._v("初始化相关属性或方法:")]),e._v(" "),_("p",[_("code",[e._v("initlifeCycce(vm)")]),e._v(": 初始化"),_("code",[e._v("$parent、$root")])]),e._v(" "),_("p",[_("code",[e._v("initEvent(vm)")]),e._v(" 监听父级传入的事件")]),e._v(" "),_("p",[_("code",[e._v("initRender(vm)")]),e._v("初始化："),_("code",[e._v("slots")])]),e._v(" "),_("p",[_("code",[e._v("callHook(vm, 'beforeCreated')")])]),e._v(" "),_("p",[_("code",[e._v("initInjections(vm)")])]),e._v(" "),_("p",[_("code",[e._v("initState(vm)")]),e._v("初始化"),_("code",[e._v("props>methods>data>computed>watch")]),e._v("进行响应式处理")]),e._v(" "),_("p",[_("code",[e._v("initProvide(vm)")])]),e._v(" "),_("p",[_("code",[e._v("callHook(vm, 'created')")])]),e._v(" "),_("p",[e._v("然后再扩展"),_("code",[e._v("Vue")]),e._v("实例")]),e._v(" "),_("p",[_("code",[e._v("stateMixin")]),e._v("添加状态有关的方法和属性："),_("code",[e._v("$set、$delete、$watch")])]),e._v(" "),_("p",[_("code",[e._v("eventMixin")]),e._v(":添加事件有关的方法和属性："),_("code",[e._v("$on、$emit、$once、$off")])]),e._v(" "),_("p",[_("code",[e._v("lifeCycleMixin")]),e._v(": 声明周期属性和方法"),_("code",[e._v("_update()、$forceUpdate()、$destroy()")])]),e._v(" "),_("p",[_("code",[e._v("renderMixin()")]),e._v(":和渲染有关的方法"),_("code",[e._v("$nextTick、_render()")])]),e._v(" "),_("h2",{attrs:{id:"在源码中查找入口文件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#在源码中查找入口文件"}},[e._v("#")]),e._v(" 在源码中查找入口文件")]),e._v(" "),_("ol",[_("li",[e._v("通过"),_("code",[e._v("package.json")]),e._v("中"),_("code",[e._v("dev")]),e._v("的配置文件中 构建脚本"),_("code",[e._v("scripts")]),e._v("中的"),_("code",[e._v("config")]),e._v("文件进行查找；"),_("code",[e._v("scripts/config.js")])]),e._v(" "),_("li",[_("code",[e._v("dev")]),e._v("配置 为"),_("code",[e._v("web-full-dev")]),e._v("，查找到对应打包配置文件")]),e._v(" "),_("li",[_("code",[e._v("resolve()")]),e._v("是封装的一个方法，会将传入的参数进行"),_("strong",[e._v("别名")]),e._v(" 解析，进行"),_("strong",[e._v("返回")])]),e._v(" "),_("li",[e._v("具体的别名解析配置存放在 "),_("code",[e._v("scripts/alias.js")])]),e._v(" "),_("li",[e._v("再通过返回的解析数据，进行相应的配置")])]),e._v(" "),_("h2",{attrs:{id:"编译过程区分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#编译过程区分"}},[e._v("#")]),e._v(" 编译过程区分")]),e._v(" "),_("p",[e._v("在使用"),_("code",[e._v("webpack")]),e._v("进行开发时是不存在"),_("strong",[e._v("编译器")]),e._v("的，因为使用了"),_("code",[e._v("vue-loader")]),e._v("内部通过编译器将我们写好的"),_("code",[e._v("template")]),e._v("进行了编译，也就是对"),_("code",[e._v("vue")]),e._v("进行了预编译")]),e._v(" "),_("p",[e._v("在"),_("strong",[e._v("源码")]),e._v("中是直接通过编译器进行编译的，"),_("strong",[e._v("运行时编译")])]),e._v(" "),_("p",[_("code",[e._v("src/platforms/web/entry-runtime-with-compiler.js")])]),e._v(" "),_("p",[e._v("对"),_("code",[e._v("$mount")]),e._v("进行扩展：处理可能存在的"),_("code",[e._v("template")]),e._v("或者"),_("code",[e._v("el")]),e._v("选项")]),e._v(" "),_("p",[_("code",[e._v("src/platforms/web/runtime/index.js")])]),e._v(" "),_("ul",[_("li",[_("p",[e._v("实现一个"),_("code",[e._v("patch")]),e._v("方法")])]),e._v(" "),_("li",[_("p",[e._v("实现"),_("code",[e._v("$mount")])])])]),e._v(" "),_("p",[_("code",[e._v("src/core/index.js")])]),e._v(" "),_("ul",[_("li",[e._v("初始化全局的API： "),_("code",[e._v("component/filter/use/directive/extend/mixin/util/set")])])]),e._v(" "),_("p",[_("code",[e._v("src/core/instance/index.js")])]),e._v(" "),_("ul",[_("li",[_("p",[e._v("声明构造函数")])]),e._v(" "),_("li",[_("p",[e._v("创建实例属性、实例方法")])])]),e._v(" "),_("p",[_("code",[e._v("$mount()")]),e._v("：生成真实的"),_("code",[e._v("dom")])]),e._v(" "),_("p",[_("code",[e._v("render")]),e._v("：获取"),_("code",[e._v("vdom")])]),e._v(" "),_("p",[_("code",[e._v("patch")]),e._v("： 初始化/更新 将vdom 转换为 dom")]),e._v(" "),_("p",[_("mark",[e._v("一个组件一个"),_("code",[e._v("watcher")])])]),e._v(" "),_("p",[_("code",[e._v("$mount > _render （获取虚拟dom） > _update （将虚拟dom转化为真实dom）")])]),e._v(" "),_("h2",{attrs:{id:"整体流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#整体流程"}},[e._v("#")]),e._v(" 整体流程")]),e._v(" "),_("p",[_("code",[e._v("new Vue() > this._init()（初始化） > $mount（执行挂载）> mountComponent （进行组件挂载） > new Watcher() > updateComponent() > _render() （获取虚拟dom）> _update(将虚拟dom转换为真实dom) > __patch__")])])])}),[],!1,null,null,null);v.default=t.exports}}]);